poly_reg=lm(formula=Salary~.,
data=dataset)
#Regresion polinomica
#Plantilla para el pre procesado de datos
#Importar el dataset
dataset=read.csv("Position_Salaries.csv")
#Extraer conjunto del dataset original
dataset=dataset[,2:3]
#Dividir los datos en conjunto de entrenamiento y conjunto de test
#install.packages("caTools")
# library(caTools)
# set.seed(123)
# split=sample.split(dataset$Purchased, SplitRatio=0.8)
# training_set=subset(dataset, split==TRUE)
# testing_set=subset(dataset, split==FALSE)
#Escalado de valores.
#training_set[,2:3]=scale(training_set[,2:3])
#testing_set[,2:3]=scale(testing_set[,2:3])
#Ajustar modelo de regresion lineal
lin_reg=lm(formula=Salary~.,
data=dataset)
#Ajustar modelo de regresion polinomica
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
dataset$Level4=dataset$Level^4
poly_reg=lm(formula=Salary~.,
data=dataset)
#Regresion polinomica
#Plantilla para el pre procesado de datos
#Importar el dataset
dataset=read.csv("Position_Salaries.csv")
#Extraer conjunto del dataset original
dataset=dataset[,2:3]
#Dividir los datos en conjunto de entrenamiento y conjunto de test
#install.packages("caTools")
# library(caTools)
# set.seed(123)
# split=sample.split(dataset$Purchased, SplitRatio=0.8)
# training_set=subset(dataset, split==TRUE)
# testing_set=subset(dataset, split==FALSE)
#Escalado de valores.
#training_set[,2:3]=scale(training_set[,2:3])
#testing_set[,2:3]=scale(testing_set[,2:3])
#Ajustar modelo de regresion lineal
lin_reg=lm(formula=Salary~.,
data=dataset)
#Ajustar modelo de regresion polinomica
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
dataset$Level4=dataset$Level^4
poly_reg=lm(formula=Salary~.,
data=dataset)
setwd("D:/Mis Documentos/Programacion/Machine Learning/datasets/Part 2 - Regression/Section 6 - Polynomial Regression")
#Plantilla para el pre procesado de datos
#Importar el dataset
dataset=read.csv("Position_Salaries.csv")
#Regresion polinomica
#Plantilla para el pre procesado de datos
#Importar el dataset
dataset=read.csv("Position_Salaries.csv")
#Extraer conjunto del dataset original
dataset=dataset[,2:3]
#Dividir los datos en conjunto de entrenamiento y conjunto de test
#install.packages("caTools")
# library(caTools)
# set.seed(123)
# split=sample.split(dataset$Purchased, SplitRatio=0.8)
# training_set=subset(dataset, split==TRUE)
# testing_set=subset(dataset, split==FALSE)
#Escalado de valores.
#training_set[,2:3]=scale(training_set[,2:3])
#testing_set[,2:3]=scale(testing_set[,2:3])
#Ajustar modelo de regresion lineal
lin_reg=lm(formula=Salary~.,
data=dataset)
#Ajustar modelo de regresion polinomica
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
dataset$Level4=dataset$Level^4
poly_reg=lm(formula=Salary~.,
data=dataset)
View(lin_reg)
View(poly_reg)
library(ggplot2)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color="red") +
geom_line(aes(x=dataset$Level, y=predict(lin_reg, newdata=dataset)),
color="blue") +
ggtitle("Prediccion lineal del suelo en funcion del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color="red") +
geom_line(aes(x=dataset$Level, y=predict(poly_reg, newdata=dataset)),
color="blue") +
ggtitle("Prediccion polinomica del suelo en funcion del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
